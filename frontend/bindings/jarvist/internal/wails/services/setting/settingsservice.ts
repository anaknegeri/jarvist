// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as application$0 from "../../../../../github.com/wailsapp/wails/v3/pkg/application/models.js";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../../../common/models/models.js";

export function CheckAndCreateEnvFile(): $CancellablePromise<void> {
    return $Call.ByID(1783880319);
}

export function CreateDefaultSettings(): $CancellablePromise<void> {
    return $Call.ByID(3223823397);
}

export function DeleteSetting(key: string): $CancellablePromise<void> {
    return $Call.ByID(2294034992, key);
}

export function GenerateEnvFile(settings: { [_: string]: string }): $CancellablePromise<void> {
    return $Call.ByID(2575245633, settings);
}

export function GetAllSettings(): $CancellablePromise<{ [_: string]: string }> {
    return $Call.ByID(2989120213).then(($result: any) => {
        return $$createType0($result);
    });
}

export function GetSetting(key: string): $CancellablePromise<string> {
    return $Call.ByID(3851952231, key);
}

export function GetSettingWithDefault(key: string, defaultValue: string): $CancellablePromise<string> {
    return $Call.ByID(2693592536, key, defaultValue);
}

export function GetTimeZones(): $CancellablePromise<models$0.TimeZone[]> {
    return $Call.ByID(3427211991).then(($result: any) => {
        return $$createType2($result);
    });
}

export function IsConfigured(): $CancellablePromise<boolean> {
    return $Call.ByID(3983603011);
}

/**
 * ServiceStartup initializes the license service
 */
export function OnStartup(options: application$0.ServiceOptions): $CancellablePromise<void> {
    return $Call.ByID(185233815, options);
}

export function SavePlaceConfig(input: models$0.SettingInput): $CancellablePromise<{ [_: string]: any }> {
    return $Call.ByID(2215926319, input).then(($result: any) => {
        return $$createType3($result);
    });
}

export function SaveSetting(key: string, value: string): $CancellablePromise<void> {
    return $Call.ByID(2591196446, key, value);
}

export function SaveSettings(settings: { [_: string]: string }): $CancellablePromise<void> {
    return $Call.ByID(2403863191, settings);
}

export function UpdatePlaceConfig(placeId: number, input: models$0.SettingInput): $CancellablePromise<{ [_: string]: any }> {
    return $Call.ByID(453525771, placeId, input).then(($result: any) => {
        return $$createType3($result);
    });
}

// Private type creation functions
const $$createType0 = $Create.Map($Create.Any, $Create.Any);
const $$createType1 = models$0.TimeZone.createFrom;
const $$createType2 = $Create.Array($$createType1);
const $$createType3 = $Create.Map($Create.Any, $Create.Any);
